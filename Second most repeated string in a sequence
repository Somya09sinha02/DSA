class Solution
{
  public:
    string secFrequent (string arr[], int n)
    {
        map<string, int> mp;
        for (int i = 0; i < n; i++)
        {
            mp[arr[i]]++;
        }

        // Priority queue to store pairs (frequency, string) in descending order of frequency
        priority_queue<pair<int, string>> pq;

        for (auto x : mp)
        {
            pq.push(make_pair(x.second, x.first));
        }

        // Pop the most frequent element
        if (!pq.empty()) pq.pop();

        // The next element in the queue will be the second most frequent element
        if (!pq.empty()) return pq.top().second;

        return "";
    }


};
